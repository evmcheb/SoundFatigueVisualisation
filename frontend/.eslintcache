[{"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/index.js":"1","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/ThemeWrapper/ThemeWrapper.js":"2","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js":"3","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/layouts/Admin.js":"4","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/contexts/BackgroundColorContext.js":"5","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/contexts/ThemeContext.js":"6","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/routes.js":"7","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Footer/Footer.js":"8","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/FixedPlugin/FixedPlugin.js":"9","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Navbars/AdminNavbar.js":"10","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Sidebar/Sidebar.js":"11","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Dashboard.js":"12","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Notifications.js":"13","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Icons.js":"14","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/TableList.js":"15","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Typography.js":"16","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/UserProfile.js":"17","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/variables/charts.js":"18","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/FetchData/FetchData.js":"19","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/variables/MyChartOne.js":"20","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/variables/Heatmap.js":"21","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Settings.js":"22","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Modals/RangeAlert.js":"23"},{"size":907,"mtime":1632197765215,"results":"24","hashOfConfig":"25"},{"size":695,"mtime":1632197765213,"results":"26","hashOfConfig":"25"},{"size":495,"mtime":1632197765209,"results":"27","hashOfConfig":"25"},{"size":4109,"mtime":1632197765216,"results":"28","hashOfConfig":"25"},{"size":254,"mtime":1632197765213,"results":"29","hashOfConfig":"25"},{"size":201,"mtime":1632197765214,"results":"30","hashOfConfig":"25"},{"size":1032,"mtime":1632199389408,"results":"31","hashOfConfig":"25"},{"size":345,"mtime":1632197765211,"results":"32","hashOfConfig":"25"},{"size":2600,"mtime":1632197765210,"results":"33","hashOfConfig":"25"},{"size":6817,"mtime":1632199389408,"results":"34","hashOfConfig":"25"},{"size":4542,"mtime":1632198439124,"results":"35","hashOfConfig":"25"},{"size":7351,"mtime":1632198439128,"results":"36","hashOfConfig":"25"},{"size":10305,"mtime":1632198439129,"results":"37","hashOfConfig":"25"},{"size":41264,"mtime":1632197765221,"results":"38","hashOfConfig":"25"},{"size":19154,"mtime":1632197765221,"results":"39","hashOfConfig":"25"},{"size":7905,"mtime":1632197765222,"results":"40","hashOfConfig":"25"},{"size":6844,"mtime":1632198439129,"results":"41","hashOfConfig":"25"},{"size":17373,"mtime":1632197765219,"results":"42","hashOfConfig":"25"},{"size":1031,"mtime":1632198439111,"results":"43","hashOfConfig":"25"},{"size":11920,"mtime":1632197765217,"results":"44","hashOfConfig":"25"},{"size":2308,"mtime":1632198439127,"results":"45","hashOfConfig":"25"},{"size":2811,"mtime":1632199770913,"results":"46","hashOfConfig":"25"},{"size":746,"mtime":1632199389407,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1o6xz7p",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/index.js",[],["103","104"],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/ThemeWrapper/ThemeWrapper.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/layouts/Admin.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/contexts/BackgroundColorContext.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/contexts/ThemeContext.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/routes.js",["105","106","107"],"import Dashboard from \"views/Dashboard.js\";\nimport Icons from \"views/Icons.js\";\nimport Notifications from \"views/Notifications.js\";\nimport TableList from \"views/TableList.js\";\nimport Typography from \"views/Typography.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport Settings from \"views/Settings\";\n\n\nvar routes = [{\n        path: \"/dashboard\",\n        name: \"Dashboard\",\n        icon: \"tim-icons icon-chart-pie-36\",\n        component: Dashboard,\n        layout: \"/admin\",\n    },\n    {\n        path: \"/userprofile\",\n        name: \"UserProfile\",\n        icon: \"tim-icons icon-chart-pie-36\",\n        component: UserProfile,\n        layout: \"/admin\",\n    },\n    {\n        path: \"/notifications\",\n        name: \"Notifications\",\n        icon: \"tim-icons icon-bell-55\",\n        component: Notifications,\n        layout: \"/admin\",\n    },\n    {\n        path: \"/settings\",\n        name: \"settings\",\n        icon: \"tim-icons icon-align-center\",\n        component: Settings,\n        layout: \"/admin\",\n    },\n];\nexport default routes;","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Footer/Footer.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/FixedPlugin/FixedPlugin.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Navbars/AdminNavbar.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Sidebar/Sidebar.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Dashboard.js",["108"],"import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\nimport FetchData from \"FetchData/FetchData.js\";\n\n\n// \n//import * as ChartAnnotation from 'chartjs-plugin-annotation';\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"variables/charts.js\";\nimport MyChartOne from \"variables/MyChartOne\";\nimport Heatmap from \"variables/Heatmap\";\n\nfunction Dashboard(props) {\n  //console.log(FetchData('room/1'))\n  (FetchData('room/1'))\n  const [bigChartData, setbigChartData,] = React.useState(\"data1\");\n  const setBgChartData = (name) => {\n    setbigChartData(name);\n  };\n  return (\n    <>\n      \n       <div className=\"content\">\n        <Row>\n          <Col xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Decibels</h5>\n                    <CardTitle tag=\"h2\"><i className=\"tim-icons icon-sound-wave text-info\" /> Room A 31st December 2015</CardTitle>\n                  </Col>\n                  <Col sm=\"6\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data1\",\n\n                        })}\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        onClick={() => setBgChartData(\"data1\")}\n                        \n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Decibels\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data2\",\n                        })}\n                        onClick={() => setBgChartData(\"data2\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Pitch\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"2\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data3\",\n                        })}\n                        onClick={() => setBgChartData(\"data3\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Decibels & Pitch\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample1[bigChartData]}\n                    options={chartExample1.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Average Decibals (All rooms)</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-bell-55 text-info\" /> 763,215\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Average Decibals Per Room </h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                  3,500€\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Bar\n                    data={chartExample3.data}\n                    options={chartExample3.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Average Pitch (All rooms)</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 12,100K\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                <h5 className=\"card-category\">Sample Graph</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-chart-bar-32 text-success\" /> Decibals Over Time\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  {/* CHANGE GRAPH HERE */}\n                  <MyChartOne/>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n             <Card>\n               <CardHeader>\n                 <h5 className=\"card-category\"></h5>\n                 <CardTitle tag=\"h3\">\n                   <i className=\"tim-icons icon-molecule-40 text-success\" /> Heatmap\n                 </CardTitle>\n               </CardHeader>\n               <CardBody>\n                 <Heatmap/>\n               </CardBody>\n             </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Notifications.js",["109"],"import React from \"react\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\nimport FetchData from \"FetchData/FetchData\";\n\n\n// reactstrap components\nimport {\n  Alert,\n  UncontrolledAlert,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  CardColumns,\n} from \"reactstrap\";\n\n\nfunction Notifications() {\n\n\n  //Gather notification history\n  var data = FetchData(2);\n  console.log(data);\n\n  function timestampToHMS(timestamp) {\n    var date = new Date(timestamp);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var seconds = \"0\" + date.getSeconds();\n    // Will display time in 10:30:23 format\n    var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    return formattedTime\n  }\n\n  var nots = data[0][\"notifications\"];\n\n  console.log(nots);\n\n  var notifications = [];\n\n  if(nots !== undefined && nots.length > 0){\n    for(var i = 0; i < nots.length; i++){\n      notifications.push(\n      <UncontrolledAlert color=\"warning\">\n        <span>\n          <b>Warning - </b>\n          { nots[i]['msg'] } at { timestampToHMS(nots[i]['time']) }!\n        </span>\n      </UncontrolledAlert>)\n    }\n  }else{\n    notifications.push(\n      <span>\n        No notification history.\n      </span>\n    )\n\n  }\n\n\n\n\n\n\n  const notificationAlertRef = React.useRef(null);\n  const notify = (place) => {\n    var color = Math.floor(Math.random() * 5 + 1);\n    var type;\n    switch (color) {\n      case 1:\n        type = \"primary\";\n        break;\n      case 2:\n        type = \"success\";\n        break;\n      case 3:\n        type = \"danger\";\n        break;\n      case 4:\n        type = \"warning\";\n        break;\n      case 5:\n        type = \"info\";\n        break;\n      default:\n        break;\n    }\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>\n            Welcome to <b>Black Dashboard React</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 7,\n    };\n    notificationAlertRef.current.notificationAlert(options);\n  };\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"react-notification-alert-container\">\n          <NotificationAlert ref={notificationAlertRef} />\n        </div>\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Notification History</CardTitle>\n              </CardHeader>\n              <CardBody>\n                { notifications }\n              </CardBody>\n            </Card>\n          </Col>\n          <Col>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Placeholder</CardTitle>\n              </CardHeader>\n              <CardBody>\n                This is a placeholder.\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Notifications Style</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Alert color=\"info\">\n                  <span>This is a plain notification</span>\n                </Alert>\n                <UncontrolledAlert color=\"info\">\n                  <span>This is a notification with close button.</span>\n                </UncontrolledAlert>\n                <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                  <span className=\"tim-icons icon-bell-55\" data-notify=\"icon\" />\n                  <span data-notify=\"message\">\n                    This is a notification with close button and icon.\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                  <span className=\"tim-icons icon-bell-55\" data-notify=\"icon\" />\n                  <span data-notify=\"message\">\n                    This is a notification with close button and icon and have\n                    many lines. You can see that the icon and the close button\n                    are always vertically aligned. This is a beautiful\n                    notification. So you don't have to worry about the style.\n                  </span>\n                </UncontrolledAlert>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Notification states</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <UncontrolledAlert color=\"primary\">\n                  <span>\n                    <b>Primary - </b>\n                    This is a regular notification made with \".alert-primary\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"info\">\n                  <span>\n                    <b>Info - </b>\n                    This is a regular notification made with \".alert-info\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"success\">\n                  <span>\n                    <b>Success - </b>\n                    This is a regular notification made with \".alert-success\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"warning\">\n                  <span>\n                    <b>Warning - </b>\n                    This is a regular notification made with \".alert-warning\"\n                  </span>\n                </UncontrolledAlert>\n                <UncontrolledAlert color=\"danger\">\n                  <span>\n                    <b>Danger - </b>\n                    This is a regular notification made with \".alert-danger\"\n                  </span>\n                </UncontrolledAlert>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col>\n            <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Configuration</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <div>\n                    <table>\n                      <tr>\n                        <td style={{padding: \"15px\"}}>\n                          Notify me if decibals exceed:\n                        </td>\n                        <td>\n                            <input type=\"number\" value=\"0\"></input>\n                        </td>\n                        <td>\n                            <input type=\"button\" value=\"set\"></input>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td style={{padding: \"15px\"}}>\n                          Notify me if the pitch exceeds:\n                        </td>\n                        <td>\n                            <input type=\"number\" value=\"0\"></input>\n                        </td>\n                        <td>\n                            <input type=\"button\" value=\"set\"></input>\n                        </td>\n                      </tr>\n                    </table>\n                  </div>\n                </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"12\">\n            <Card>\n              <CardBody>\n                <div className=\"places-buttons\">\n                  <Row>\n                    <Col className=\"ml-auto mr-auto text-center\" md=\"6\">\n                      <CardTitle tag=\"h4\">\n                        Notifications Places\n                        <p className=\"category\">Click to view notifications</p>\n                      </CardTitle>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                      <Row>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"tl\")}\n                          >\n                            Top Left\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"tc\")}\n                          >\n                            Top Center\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"tr\")}\n                          >\n                            Top Right\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                      <Row>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"bl\")}\n                          >\n                            Bottom Left\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"bc\")}\n                          >\n                            Bottom Center\n                          </Button>\n                        </Col>\n                        <Col md=\"4\">\n                          <Button\n                            block\n                            color=\"primary\"\n                            onClick={() => notify(\"br\")}\n                          >\n                            Bottom Right\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Notifications;\n","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Icons.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/TableList.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Typography.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/UserProfile.js",[],"/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/variables/charts.js",["110"],"// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample1 = {\n  data1: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors \n    return {\n      \n      labels: [\"00:05\",\"00:10\",\"00:15\",\"00:20\",\"00:25\",\"00:30\",\"00:35\",\"00:40\",\"00:45\",\"00:50\",\"00:55\",\"01:00\",\"01:05\",\"01:10\",\"01:15\",\"01:20\",\"01:25\",\"01:30\",\"01:35\",\"01:40\",\"01:45\",\"01:50\",\"01:55\",\"02:00\",\"02:05\",\"02:10\",\"02:15\",\"02:20\",\"02:25\",\"02:30\",\"02:35\",\"02:40\",\"02:45\",\"02:50\",\"02:55\",\"03:00\",\"03:05\",\"03:10\",\"03:15\",\"03:20\",\"03:25\",\"03:30\",\"03:35\",\"03:40\",\"03:45\",\"03:50\",\"03:55\",\"04:00\",\"04:05\",\"04:10\",\"04:15\",\"04:20\",\"04:25\",\"04:30\",\"04:35\",\"04:40\",\"04:45\",\"04:50\",\"04:55\",\"05:00\",\"05:05\",\"05:10\",\"05:15\",\"05:20\",\"05:25\",\"05:30\",\"05:35\",\"05:40\",\"05:45\",\"05:50\",\"05:55\",\"06:00\",\"06:05\",\"06:10\",\"06:15\",\"06:20\",\"06:25\",\"06:30\",\"06:35\",\"06:40\",\"06:45\",\"06:50\",\"06:55\",\"07:00\",\"07:05\",\"07:10\",\"07:15\",\"07:20\",\"07:25\",\"07:30\",\"07:35\",\"07:40\",\"07:45\",\"07:50\",\"07:55\",\"08:00\",\"08:05\",\"08:10\",\"08:15\",\"08:20\",\"08:25\",\"08:30\",\"08:35\",\"08:40\",\"08:45\",\"08:50\",\"08:55\",\"09:00\",\"09:05\",\"09:10\",\"09:15\",\"09:20\",\"09:25\",\"09:30\",\"09:35\",\"09:40\",\"09:45\",\"09:50\",\"09:55\",\"10:00\",\"10:05\",\"10:10\",\"10:15\",\"10:20\",\"10:25\",\"10:30\",\"10:35\",\"10:40\",\"10:45\",\"10:50\",\"10:55\",\"11:00\",\"11:05\",\"11:10\",\"11:15\",\"11:20\",\"11:25\",\"11:30\",\"11:35\",\"11:40\",\"11:45\",\"11:50\",\"11:55\",\"12:00\",\"12:05\",\"12:10\",\"12:15\",\"12:20\",\"12:25\",\"12:30\",\"12:35\",\"12:40\",\"12:45\",\"12:50\",\"12:55\",\"13:00\",\"13:05\",\"13:10\",\"13:15\",\"13:20\",\"13:25\",\"13:30\",\"13:35\",\"13:40\",\"13:45\",\"13:50\",\"13:55\",\"14:00\",\"14:05\",\"14:10\",\"14:15\",\"14:20\",\"14:25\",\"14:30\",\"14:35\",\"14:40\",\"14:45\",\"14:50\",\"14:55\",\"15:00\",\"15:05\",\"15:10\",\"15:15\",\"15:20\",\"15:25\",\"15:30\",\"15:35\",\"15:40\",\"15:45\",\"15:50\",\"15:55\",\"16:00\",\"16:05\",\"16:10\",\"16:15\",\"16:20\",\"16:25\",\"16:30\",\"16:35\",\"16:40\",\"16:45\",\"16:50\",\"16:55\",\"17:00\",\"17:05\",\"17:10\",\"17:15\",\"17:20\",\"17:25\",\"17:30\",\"17:35\",\"17:40\",\"17:45\",\"17:50\",\"17:55\",\"18:00\",\"18:05\",\"18:10\",\"18:15\",\"18:20\",\"18:25\",\"18:30\",\"18:35\",\"18:40\",\"18:45\",\"18:50\",\"18:55\",\"19:00\",\"19:05\",\"19:10\",\"19:15\",\"19:20\",\"19:25\",\"19:30\",\"19:35\",\"19:40\",\"19:45\",\"19:50\",\"19:55\",\"20:00\",\"20:05\",\"20:10\",\"20:15\",\"20:20\",\"20:25\",\"20:30\",\"20:35\",\"20:40\",\"20:45\",\"20:50\",\"20:55\",\"21:00\",\"21:05\",\"21:10\",\"21:15\",\"21:20\",\"21:25\",\"21:30\",\"21:35\",\"21:40\",\"21:45\",\"21:50\",\"21:55\",\"22:00\",\"22:05\",\"22:10\",\"22:15\",\"22:20\",\"22:25\",\"22:30\",\"22:35\",\"22:40\",\"22:45\",\"22:50\",\"22:55\",\"23:00\",\"23:05\",\"23:10\",\"23:15\",\"23:20\",\"23:25\",\"23:30\",\"23:35\",\"23:40\",\"23:45\",\"23:50\",\"23:55\"],\n      \n      datasets: [\n        {\n          label: \"Sound Level for Room A on 2015-12-31\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 2,\n          data: [46.36,45.73,46.23,45.4,44.45,48.91,45.41,45.84,45.62,44.32,45.47,47.85,46.05,41.88,42.57,43.66,43.95,46.29,43.12,47.19,46.02,48.67,47.86,44.71,44.64,45.35,46.88,43.41,44.79,42.74,43.27,43.13,45.26,46.86,44.15,47.75,43.25,46.07,46.67,48.1,49.24,49.77,43.85,46.22,46.61,47.54,48.35,45.61,45.65,45.47,42.74,43.53,44.57,47.77,48.91,49.57,51.82,47.9,47.32,48.6,49.73,49.72,49.55,55.43,54.17,55.5,62.56,59.28,64.11,64.92,62.64,57.31,59.11,60.77,58.76,56.87,57.81,55.96,53.53,55.05,53.61,53.42,54.66,53.13,53.6,51.6,54.21,54.6,51.3,50.67,54.01,52.92,52.87,53.37,52.5,52.99,52.96,53.82,54.22,55.24,55.77,54.89,55.32,54.02,55.62,54.44,54.71,54.99,55.81,61.01,59.9,57.32,58.54,54.57,55.79,55.51,58.93,57.8,57.36,57.78,57.14,57.02,57.06,58.19,58.41,57.3,57.01,67.22,58.27,58.49,58.12,56.46,58.69,58.37,56.68,57.87,57.08,58.64,56.5,57.57,58.29,57.76,56.73,58.01,57.64,58.17,57.96,58.59,58.56,58.04,57.92,60.37,58.78,57.96,58.19,58.59,58.56,57.86,59.2,59.66,59.42,58.63,58.36,57.8,58.85,57.96,57.76,58.53,58.29,58.9,58.44,58.78,58.79,58.4,60.02,60.8,57.68,60.37,60.05,59.61,62.01,59.89,59.39,59.55,58.61,57.88,58.22,58.26,59.28,57.35,58.5,59.45,57.81,58.41,58.63,57.59,57.72,58.58,56.01,58.07,58.24,56.97,56.53,57.14,56.55,57.51,56.26,57.31,57.13,56.19,56.57,57.58,58.58,58.01,56.95,56.53,57.05,56.72,55.98,56.06,56.03,56.31,56.43,55.61,55.65,56.96,56.0,57.23,56.44,56.07,55.85,56.05,55.76,55.16,55.37,56.33,54.4,56.55,56.48,54.38,55.92,55.41,57.63,55.06,53.93,53.61,54.64,54.83,55.34,54.87,53.26,54.14,54.94,54.81,55.02,54.17,54.0,53.21,53.16,54.18,52.42,55.16,53.98,54.07,53.16,52.21,53.03,54.57,52.28,51.14,51.71,52.69,51.24,50.67,52.09,50.68,51.07,50.41,50.35,50.24,48.55,49.97,50.25,49.39,48.78,48.08,47.91],\n          \n        },\n      \n        {\n          label: \"Threshold\",\n          mode: 'horizontal',\n          data:[150],\n\n\n\n        }\n      ],\n\n      \n    };\n  },\n  data2: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n        },\n      ],\n    };\n  },\n  data3: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\n\n// new chart by shane\nconst straightLine ={\n    data1: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors \n    return {\n      labels: [\"00:05\",\"00:10\",\"00:15\",\"00:20\",\"00:25\",\"00:30\",\"00:35\",\"00:40\",\"00:45\",\"00:50\",\"00:55\",\"01:00\",\"01:05\",\"01:10\",\"01:15\",\"01:20\",\"01:25\",\"01:30\",\"01:35\",\"01:40\",\"01:45\",\"01:50\",\"01:55\",\"02:00\",\"02:05\",\"02:10\",\"02:15\",\"02:20\",\"02:25\",\"02:30\",\"02:35\",\"02:40\",\"02:45\",\"02:50\",\"02:55\",\"03:00\",\"03:05\",\"03:10\",\"03:15\",\"03:20\",\"03:25\",\"03:30\",\"03:35\",\"03:40\",\"03:45\",\"03:50\",\"03:55\",\"04:00\",\"04:05\",\"04:10\",\"04:15\",\"04:20\",\"04:25\",\"04:30\",\"04:35\",\"04:40\",\"04:45\",\"04:50\",\"04:55\",\"05:00\",\"05:05\",\"05:10\",\"05:15\",\"05:20\",\"05:25\",\"05:30\",\"05:35\",\"05:40\",\"05:45\",\"05:50\",\"05:55\",\"06:00\",\"06:05\",\"06:10\",\"06:15\",\"06:20\",\"06:25\",\"06:30\",\"06:35\",\"06:40\",\"06:45\",\"06:50\",\"06:55\",\"07:00\",\"07:05\",\"07:10\",\"07:15\",\"07:20\",\"07:25\",\"07:30\",\"07:35\",\"07:40\",\"07:45\",\"07:50\",\"07:55\",\"08:00\",\"08:05\",\"08:10\",\"08:15\",\"08:20\",\"08:25\",\"08:30\",\"08:35\",\"08:40\",\"08:45\",\"08:50\",\"08:55\",\"09:00\",\"09:05\",\"09:10\",\"09:15\",\"09:20\",\"09:25\",\"09:30\",\"09:35\",\"09:40\",\"09:45\",\"09:50\",\"09:55\",\"10:00\",\"10:05\",\"10:10\",\"10:15\",\"10:20\",\"10:25\",\"10:30\",\"10:35\",\"10:40\",\"10:45\",\"10:50\",\"10:55\",\"11:00\",\"11:05\",\"11:10\",\"11:15\",\"11:20\",\"11:25\",\"11:30\",\"11:35\",\"11:40\",\"11:45\",\"11:50\",\"11:55\",\"12:00\",\"12:05\",\"12:10\",\"12:15\",\"12:20\",\"12:25\",\"12:30\",\"12:35\",\"12:40\",\"12:45\",\"12:50\",\"12:55\",\"13:00\",\"13:05\",\"13:10\",\"13:15\",\"13:20\",\"13:25\",\"13:30\",\"13:35\",\"13:40\",\"13:45\",\"13:50\",\"13:55\",\"14:00\",\"14:05\",\"14:10\",\"14:15\",\"14:20\",\"14:25\",\"14:30\",\"14:35\",\"14:40\",\"14:45\",\"14:50\",\"14:55\",\"15:00\",\"15:05\",\"15:10\",\"15:15\",\"15:20\",\"15:25\",\"15:30\",\"15:35\",\"15:40\",\"15:45\",\"15:50\",\"15:55\",\"16:00\",\"16:05\",\"16:10\",\"16:15\",\"16:20\",\"16:25\",\"16:30\",\"16:35\",\"16:40\",\"16:45\",\"16:50\",\"16:55\",\"17:00\",\"17:05\",\"17:10\",\"17:15\",\"17:20\",\"17:25\",\"17:30\",\"17:35\",\"17:40\",\"17:45\",\"17:50\",\"17:55\",\"18:00\",\"18:05\",\"18:10\",\"18:15\",\"18:20\",\"18:25\",\"18:30\",\"18:35\",\"18:40\",\"18:45\",\"18:50\",\"18:55\",\"19:00\",\"19:05\",\"19:10\",\"19:15\",\"19:20\",\"19:25\",\"19:30\",\"19:35\",\"19:40\",\"19:45\",\"19:50\",\"19:55\",\"20:00\",\"20:05\",\"20:10\",\"20:15\",\"20:20\",\"20:25\",\"20:30\",\"20:35\",\"20:40\",\"20:45\",\"20:50\",\"20:55\",\"21:00\",\"21:05\",\"21:10\",\"21:15\",\"21:20\",\"21:25\",\"21:30\",\"21:35\",\"21:40\",\"21:45\",\"21:50\",\"21:55\",\"22:00\",\"22:05\",\"22:10\",\"22:15\",\"22:20\",\"22:25\",\"22:30\",\"22:35\",\"22:40\",\"22:45\",\"22:50\",\"22:55\",\"23:00\",\"23:05\",\"23:10\",\"23:15\",\"23:20\",\"23:25\",\"23:30\",\"23:35\",\"23:40\",\"23:45\",\"23:50\",\"23:55\"],\n      datasets: [\n        {\n          label: \"Sound Level for Room A on 2015-12-31\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 2,\n          data: [150],\n          \n        },\n      ],\n    };\n  },\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.js\n  chartExample2, // in src/views/Dashboard.js\n  chartExample3, // in src/views/Dashboard.js\n  chartExample4, // in src/views/Dashboard.js\n};\n","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/FetchData/FetchData.js",["111","112"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\nconst FetchData = (type = 1) => {\n    const [fetchedData, setFetchedData] = useState({});\n\n    var url = `http://127.0.0.1:8000/room/1`;\n\n    if(type === 2){\n        url = `http://127.0.0.1:8000/notification_history/1`;\n    }\n    \n    const fetchData = async (url) => {\n        console.log(\"Fetching data\")\n        return new Promise((res, rej) => {\n            axios.get(url)\n                .then((resp) => {\n                    res(resp.data[0]);\n                })\n                .catch(err => rej(err))\n        });\n    }\n\n    useEffect(async () => {\n        let isMounted = true;\n        const fetchedData = await fetchData(url);\n        if (isMounted) {\n            setFetchedData(fetchedData);\n        }\n        return () => isMounted = false;\n    }, []);\n\n    const fetchNewData = () => {\n        fetchData(url).then((res) => {\n            setFetchedData(res)\n        })\n    }\n\n    return [fetchedData, fetchNewData];\n}\n\nexport default FetchData;\n\n","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/variables/MyChartOne.js",["113","114","115","116","117"],"import React,{useRef,useState,useEffect} from 'react'\nimport {select,selectAll,Selection} from 'd3-selection'\nimport {scaleLinear,scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisLeft, axisBottom} from 'd3-axis'\n\nvar initialData =[{\n    \"Recorded Value (dBA)\": 64.5,\n    \"Time (seconds)\": 1\n  },\n  {\n    \"Recorded Value (dBA)\": 66.6,\n    \"Time (seconds)\": 2\n  },\n  {\n    \"Recorded Value (dBA)\": 62,\n    \"Time (seconds)\": 3\n  },\n  {\n    \"Recorded Value (dBA)\": 58.2,\n    \"Time (seconds)\": 4\n  },\n  {\n    \"Recorded Value (dBA)\": 58.4,\n    \"Time (seconds)\": 5\n  },\n  {\n    \"Recorded Value (dBA)\": 60.4,\n    \"Time (seconds)\": 6\n  },\n  {\n    \"Recorded Value (dBA)\": 61.5,\n    \"Time (seconds)\": 7\n  },\n  {\n    \"Recorded Value (dBA)\": 60,\n    \"Time (seconds)\": 8\n  },\n  {\n    \"Recorded Value (dBA)\": 60,\n    \"Time (seconds)\": 9\n  },\n  {\n    \"Recorded Value (dBA)\": 59.3,\n    \"Time (seconds)\": 10\n  },\n  {\n    \"Recorded Value (dBA)\": 58.6,\n    \"Time (seconds)\": 11\n  },\n  {\n    \"Recorded Value (dBA)\": 57.7,\n    \"Time (seconds)\": 12\n  },\n  {\n    \"Recorded Value (dBA)\": 60.5,\n    \"Time (seconds)\": 13\n  },\n  {\n    \"Recorded Value (dBA)\": 57.8,\n    \"Time (seconds)\": 14\n  },\n  {\n    \"Recorded Value (dBA)\": 57.1,\n    \"Time (seconds)\": 15\n  },\n  {\n    \"Recorded Value (dBA)\": 61.6,\n    \"Time (seconds)\": 16\n  },\n  {\n    \"Recorded Value (dBA)\": 56.5,\n    \"Time (seconds)\": 17\n  },\n  {\n    \"Recorded Value (dBA)\": 54.2,\n    \"Time (seconds)\": 18\n  },\n  {\n    \"Recorded Value (dBA)\": 55.5,\n    \"Time (seconds)\": 19\n  },\n  {\n    \"Recorded Value (dBA)\": 58.1,\n    \"Time (seconds)\": 20\n  },\n  {\n    \"Recorded Value (dBA)\": 56.3,\n    \"Time (seconds)\": 21\n  },\n  {\n    \"Recorded Value (dBA)\": 56.3,\n    \"Time (seconds)\": 22\n  },\n  {\n    \"Recorded Value (dBA)\": 59.9,\n    \"Time (seconds)\": 23\n  },\n  {\n    \"Recorded Value (dBA)\": 58.5,\n    \"Time (seconds)\": 24\n  },\n  {\n    \"Recorded Value (dBA)\": 59.8,\n    \"Time (seconds)\": 25\n  },\n  {\n    \"Recorded Value (dBA)\": 63.1,\n    \"Time (seconds)\": 26\n  },\n  {\n    \"Recorded Value (dBA)\": 61,\n    \"Time (seconds)\": 27\n  },\n  {\n    \"Recorded Value (dBA)\": 58.3,\n    \"Time (seconds)\": 28\n  },\n  {\n    \"Recorded Value (dBA)\": 52.4,\n    \"Time (seconds)\": 29\n  },\n  {\n    \"Recorded Value (dBA)\": 58.5,\n    \"Time (seconds)\": 30\n  },\n  {\n    \"Recorded Value (dBA)\": 48.5,\n    \"Time (seconds)\": 31\n  },\n  {\n    \"Recorded Value (dBA)\": 49,\n    \"Time (seconds)\": 32\n  },\n  {\n    \"Recorded Value (dBA)\": 49.5,\n    \"Time (seconds)\": 33\n  },\n  {\n    \"Recorded Value (dBA)\": 61.4,\n    \"Time (seconds)\": 34\n  },\n  {\n    \"Recorded Value (dBA)\": 57.7,\n    \"Time (seconds)\": 35\n  },\n  {\n    \"Recorded Value (dBA)\": 59.9,\n    \"Time (seconds)\": 36\n  },\n  {\n    \"Recorded Value (dBA)\": 62,\n    \"Time (seconds)\": 37\n  },\n  {\n    \"Recorded Value (dBA)\": 61.8,\n    \"Time (seconds)\": 38\n  },\n  {\n    \"Recorded Value (dBA)\": 62.6,\n    \"Time (seconds)\": 39\n  },\n  {\n    \"Recorded Value (dBA)\": 62,\n    \"Time (seconds)\": 40\n  },\n  {\n    \"Recorded Value (dBA)\": 63.1,\n    \"Time (seconds)\": 41\n  },\n  {\n    \"Recorded Value (dBA)\": 60.3,\n    \"Time (seconds)\": 42\n  },\n  {\n    \"Recorded Value (dBA)\": 58.3,\n    \"Time (seconds)\": 43\n  },\n  {\n    \"Recorded Value (dBA)\": 60.5,\n    \"Time (seconds)\": 44\n  },\n  {\n    \"Recorded Value (dBA)\": 53.7,\n    \"Time (seconds)\": 45\n  },\n  {\n    \"Recorded Value (dBA)\": 51.1,\n    \"Time (seconds)\": 46\n  },\n  {\n    \"Recorded Value (dBA)\": 48.8,\n    \"Time (seconds)\": 47\n  },\n  {\n    \"Recorded Value (dBA)\": 60.2,\n    \"Time (seconds)\": 48\n  },\n  {\n    \"Recorded Value (dBA)\": 57.3,\n    \"Time (seconds)\": 49\n  },\n  {\n    \"Recorded Value (dBA)\": 61.4,\n    \"Time (seconds)\": 50\n  },\n  {\n    \"Recorded Value (dBA)\": 61.4,\n    \"Time (seconds)\": 51\n  },\n  {\n    \"Recorded Value (dBA)\": 60.3,\n    \"Time (seconds)\": 52\n  },\n  {\n    \"Recorded Value (dBA)\": 59.7,\n    \"Time (seconds)\": 53\n  },\n  {\n    \"Recorded Value (dBA)\": 62.2,\n    \"Time (seconds)\": 54\n  },\n  {\n    \"Recorded Value (dBA)\": 61.6,\n    \"Time (seconds)\": 55\n  },\n  {\n    \"Recorded Value (dBA)\": 58.8,\n    \"Time (seconds)\": 56\n  },\n  {\n    \"Recorded Value (dBA)\": 53.8,\n    \"Time (seconds)\": 57\n  },\n  {\n    \"Recorded Value (dBA)\": 59,\n    \"Time (seconds)\": 58\n  },\n  {\n    \"Recorded Value (dBA)\": 49.2,\n    \"Time (seconds)\": 59\n  },\n  {\n    \"Recorded Value (dBA)\": 48.3,\n    \"Time (seconds)\": 60\n  },\n  {\n    \"Recorded Value (dBA)\": 51.2,\n    \"Time (seconds)\": 61\n  },\n  {\n    \"Recorded Value (dBA)\": 62.3,\n    \"Time (seconds)\": 62\n  },\n  {\n    \"Recorded Value (dBA)\": 61.6,\n    \"Time (seconds)\": 63\n  },\n  {\n    \"Recorded Value (dBA)\": 60.2,\n    \"Time (seconds)\": 64\n  },\n  {\n    \"Recorded Value (dBA)\": 61.7,\n    \"Time (seconds)\": 65\n  },\n  {\n    \"Recorded Value (dBA)\": 58.3,\n    \"Time (seconds)\": 66\n  },\n  {\n    \"Recorded Value (dBA)\": 58.3,\n    \"Time (seconds)\": 67\n  },\n  {\n    \"Recorded Value (dBA)\": 61.1,\n    \"Time (seconds)\": 68\n  },\n  {\n    \"Recorded Value (dBA)\": 62.3,\n    \"Time (seconds)\": 69\n  },\n  {\n    \"Recorded Value (dBA)\": 60,\n    \"Time (seconds)\": 70\n  },\n  {\n    \"Recorded Value (dBA)\": 56.7,\n    \"Time (seconds)\": 71\n  },\n  {\n    \"Recorded Value (dBA)\": 59.2,\n    \"Time (seconds)\": 72\n  },\n  {\n    \"Recorded Value (dBA)\": 58.1,\n    \"Time (seconds)\": 73\n  },\n  {\n    \"Recorded Value (dBA)\": 55.1,\n    \"Time (seconds)\": 74\n  },\n  {\n    \"Recorded Value (dBA)\": 53.7,\n    \"Time (seconds)\": 75\n  },\n  {\n    \"Recorded Value (dBA)\": 59.3,\n    \"Time (seconds)\": 76\n  },\n  {\n    \"Recorded Value (dBA)\": 56.1,\n    \"Time (seconds)\": 77\n  },\n  {\n    \"Recorded Value (dBA)\": 58.3,\n    \"Time (seconds)\": 78\n  },\n  {\n    \"Recorded Value (dBA)\": 60.8,\n    \"Time (seconds)\": 79\n  },\n  {\n    \"Recorded Value (dBA)\": 60.9,\n    \"Time (seconds)\": 80\n  },\n  {\n    \"Recorded Value (dBA)\": 59.9,\n    \"Time (seconds)\": 81\n  },\n  {\n    \"Recorded Value (dBA)\": 61,\n    \"Time (seconds)\": 82\n  },\n  {\n    \"Recorded Value (dBA)\": 60.3,\n    \"Time (seconds)\": 83\n  },\n  {\n    \"Recorded Value (dBA)\": 56.9,\n    \"Time (seconds)\": 84\n  },\n  {\n    \"Recorded Value (dBA)\": 59.6,\n    \"Time (seconds)\": 85\n  },\n  {\n    \"Recorded Value (dBA)\": 59.3,\n    \"Time (seconds)\": 86\n  },\n  {\n    \"Recorded Value (dBA)\": 61.2,\n    \"Time (seconds)\": 87\n  },\n  {\n    \"Recorded Value (dBA)\": 59.6,\n    \"Time (seconds)\": 88\n  },\n  {\n    \"Recorded Value (dBA)\": 59.3,\n    \"Time (seconds)\": 89\n  },\n  {\n    \"Recorded Value (dBA)\": 59,\n    \"Time (seconds)\": 90\n  },\n  {\n    \"Recorded Value (dBA)\": 54.4,\n    \"Time (seconds)\": 91\n  },\n  {\n    \"Recorded Value (dBA)\": 59.3,\n    \"Time (seconds)\": 92\n  },\n  {\n    \"Recorded Value (dBA)\": 59.7,\n    \"Time (seconds)\": 93\n  },\n  {\n    \"Recorded Value (dBA)\": 58.4,\n    \"Time (seconds)\": 94\n  },\n  {\n    \"Recorded Value (dBA)\": 58.1,\n    \"Time (seconds)\": 95\n  },\n  {\n    \"Recorded Value (dBA)\": 57.4,\n    \"Time (seconds)\": 96\n  },\n  {\n    \"Recorded Value (dBA)\": 62.3,\n    \"Time (seconds)\": 97\n  },\n  {\n    \"Recorded Value (dBA)\": 61.2,\n    \"Time (seconds)\": 98\n  },\n  {\n    \"Recorded Value (dBA)\": 59.1,\n    \"Time (seconds)\": 99\n  },\n  {\n    \"Recorded Value (dBA)\": 60.3,\n    \"Time (seconds)\": 100\n  },\n  {\n    \"Recorded Value (dBA)\": 58.1,\n    \"Time (seconds)\": 101\n  },\n  {\n    \"Recorded Value (dBA)\": 55.6,\n    \"Time (seconds)\": 102\n  },\n  {\n    \"Recorded Value (dBA)\": 54.7,\n    \"Time (seconds)\": 103\n  },\n  {\n    \"Recorded Value (dBA)\": 58.6,\n    \"Time (seconds)\": 104\n  },\n  {\n    \"Recorded Value (dBA)\": 53.6,\n    \"Time (seconds)\": 105\n  },\n  {\n    \"Recorded Value (dBA)\": 55,\n    \"Time (seconds)\": 106\n  },\n  {\n    \"Recorded Value (dBA)\": 61.1,\n    \"Time (seconds)\": 107\n  },\n  {\n    \"Recorded Value (dBA)\": 58,\n    \"Time (seconds)\": 108\n  },\n  {\n    \"Recorded Value (dBA)\": 61.4,\n    \"Time (seconds)\": 109\n  },\n  {\n    \"Recorded Value (dBA)\": 63.7,\n    \"Time (seconds)\": 110\n  },\n  {\n    \"Recorded Value (dBA)\": 63.5,\n    \"Time (seconds)\": 111\n  },\n  {\n    \"Recorded Value (dBA)\": 63,\n    \"Time (seconds)\": 112\n  },\n  {\n    \"Recorded Value (dBA)\": 60.1,\n    \"Time (seconds)\": 113\n  },\n  {\n    \"Recorded Value (dBA)\": 58.7,\n    \"Time (seconds)\": 114\n  },\n  {\n    \"Recorded Value (dBA)\": 58,\n    \"Time (seconds)\": 115\n  },\n  {\n    \"Recorded Value (dBA)\": 58.1,\n    \"Time (seconds)\": 116\n  },\n  {\n    \"Recorded Value (dBA)\": 60,\n    \"Time (seconds)\": 117\n  },\n  {\n    \"Recorded Value (dBA)\": 61.9,\n    \"Time (seconds)\": 118\n  },\n  {\n    \"Recorded Value (dBA)\": 62.2,\n    \"Time (seconds)\": 119\n  },\n  {\n    \"Recorded Value (dBA)\": 60.7,\n    \"Time (seconds)\": 120\n  },\n  {\n    \"Recorded Value (dBA)\": 61.8,\n    \"Time (seconds)\": 121\n  },\n  {\n    \"Recorded Value (dBA)\": 61.9,\n    \"Time (seconds)\": 122\n  },\n  {\n    \"Recorded Value (dBA)\": 62.5,\n    \"Time (seconds)\": 123\n  },\n  {\n    \"Recorded Value (dBA)\": 65.8,\n    \"Time (seconds)\": 124\n  },\n  {\n    \"Recorded Value (dBA)\": 65.6,\n    \"Time (seconds)\": 125\n  },\n  {\n    \"Recorded Value (dBA)\": 64,\n    \"Time (seconds)\": 126\n  },\n  {\n    \"Recorded Value (dBA)\": 59.2,\n    \"Time (seconds)\": 127\n  },\n  {\n    \"Recorded Value (dBA)\": 60.3,\n    \"Time (seconds)\": 128\n  },\n  {\n    \"Recorded Value (dBA)\": 62.3,\n    \"Time (seconds)\": 129\n  },\n  {\n    \"Recorded Value (dBA)\": 60.5,\n    \"Time (seconds)\": 130\n  },\n  {\n    \"Recorded Value (dBA)\": 59.3,\n    \"Time (seconds)\": 131\n  },\n  {\n    \"Recorded Value (dBA)\": 63,\n    \"Time (seconds)\": 132\n  },\n  {\n    \"Recorded Value (dBA)\": 58.3,\n    \"Time (seconds)\": 133\n  },\n  {\n    \"Recorded Value (dBA)\": 57,\n    \"Time (seconds)\": 134\n  },\n  {\n    \"Recorded Value (dBA)\": 59.1,\n    \"Time (seconds)\": 135\n  },\n  {\n    \"Recorded Value (dBA)\": 62,\n    \"Time (seconds)\": 136\n  },\n  {\n    \"Recorded Value (dBA)\": 59.6,\n    \"Time (seconds)\": 137\n  },\n  {\n    \"Recorded Value (dBA)\": 59.8,\n    \"Time (seconds)\": 138\n  },\n  {\n    \"Recorded Value (dBA)\": 62.8,\n    \"Time (seconds)\": 139\n  },\n  {\n    \"Recorded Value (dBA)\": 59.5,\n    \"Time (seconds)\": 140\n  },\n  {\n    \"Recorded Value (dBA)\": 57.7,\n    \"Time (seconds)\": 141\n  },\n  {\n    \"Recorded Value (dBA)\": 61.5,\n    \"Time (seconds)\": 142\n  },\n  {\n    \"Recorded Value (dBA)\": 63.4,\n    \"Time (seconds)\": 143\n  },\n  {\n    \"Recorded Value (dBA)\": 61.9,\n    \"Time (seconds)\": 144\n  },\n  {\n    \"Recorded Value (dBA)\": 60.2,\n    \"Time (seconds)\": 145\n  },\n  {\n    \"Recorded Value (dBA)\": 63.5,\n    \"Time (seconds)\": 146\n  },\n  {\n    \"Recorded Value (dBA)\": 61.7,\n    \"Time (seconds)\": 147\n  },\n  {\n    \"Recorded Value (dBA)\": 58.8,\n    \"Time (seconds)\": 148\n  },\n  {\n    \"Recorded Value (dBA)\": 61.8,\n    \"Time (seconds)\": 149\n  }\n ]\n\nconst dimensions = {\n    width :1500,\n    height:200\n}\n \nfunction MyChartOne() {\n    const ref = useRef(null)\n    const [selection,setSelection] = useState(null)\n    const[data,setData]= useState(initialData)\n\n    let y = scaleLinear()\n      .domain([0,max(data,d=>d['Recorded Value (dBA)'])])\n      .range([dimensions.height,0])\n\n    const x = scaleBand()\n      .domain(data.map(d=>String(d['Time (seconds)'])))\n      .range([0,dimensions.width])\n      .paddingInner(0.05)\n\n\n    useEffect(()=>{\n      if(!selection){\n        setSelection(select(ref.current))\n      }\n      else{\n        selection\n          .append(\"g\")\n          .attr(\"class\", \"grid\")\n          //.call(axisLeft(y)\n            //    .tickSize(-dimensions.width)\n                \n          //)\n          \n          .call(axisBottom(x))\n          \n          .selectAll('rect')\n          .data(data)\n          .enter()\n          .append('rect')\n          .attr('width',x.bandwidth)\n          .attr('height',d=>dimensions.height- y(d['Recorded Value (dBA)']))\n          .attr('x',d=>x(String(d['Time (seconds)'])))\n          .attr('y',d=>y(d['Recorded Value (dBA)']))\n         \n          .attr(\"fill\", function(d, i) {\n            return d['Recorded Value (dBA)'] > 60 ? \"rgba(217, 30, 24, 1)\": \"rgba(29,140,248,0.79)\";\n            })\n          \n              \n          \n      }\n\n    },[selection])\n\n\n\n     return (\n         <div>\n             <svg ref={ref} width={dimensions.width} height ={dimensions.height}/>\n         </div>\n     )\n }\n \n export default MyChartOne\n ","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/variables/Heatmap.js",["118","119","120","121","122","123","124","125","126","127","128","129"],"import React,{useRef,useState,useEffect} from 'react'\nimport {select,selectAll,Selection} from 'd3-selection'\nimport {scaleLinear,scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisLeft, axisBottom} from 'd3-axis'\nimport * as d3 from \"d3\"\n\nfunction Heatmap(){ \n    const ref = useRef(null)\n\n    const dimensions = {\n        width :1500,\n        height:200\n    }\n\n    // set the dimensions and margins of the graph\n    const margin = {top: 30, right: 30, bottom: 30, left: 30},\n    width = 450 - margin.left - margin.right,\n    height = 450 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    const svg = d3.select(\"#heatmap\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Labels of row and columns\n    const myGroups = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"]\n    const myVars = [\"v1\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\", \"v8\", \"v9\", \"v10\"]\n\n    // Build X scales and axis:\n    const x = d3.scaleBand()\n    .range([ 0, width ])\n    .domain(myGroups)\n    .padding(0.01);\n    svg.append(\"g\")\n    .attr(\"transform\", `translate(0, ${height})`)\n    .call(d3.axisBottom(x))\n\n    // Build X scales and axis:\n    const y = d3.scaleBand()\n    .range([ height, 0 ])\n    .domain(myVars)\n    .padding(0.01);\n    svg.append(\"g\")\n    .call(d3.axisLeft(y));\n\n    // Build color scale\n    /*const myColor = d3.scaleLinear()\n    .range([\"Green\", \"Yellow\"])\n    .domain([1,100])*/\n    const myColor = d3.scaleSequential()\n    .interpolator( d3.interpolateRdYlBu)\n    .domain([0, 100])\n\n    //Read the data\n    d3.csv(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/heatmap_data.csv\").then( function(data) {\n\n    svg.selectAll()\n        .data(data, function(d) {return d.group+':'+d.variable;})\n        .join(\"rect\")\n        .attr(\"x\", function(d) { return x(d.group) })\n        .attr(\"y\", function(d) { return y(d.variable) })\n        .attr(\"width\", x.bandwidth() )\n        .attr(\"height\", y.bandwidth() )\n        .style(\"fill\", function(d) { return myColor(d.value)} )\n\n    })\n\n     return (\n        <div id=\"heatmap\"></div>\n     )\n }\n \n export default Heatmap\n ","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/views/Settings.js",["130","131","132"],"import React, { useState } from \"react\";\n\n // reactstrap components\n import { Card, CardHeader, CardBody, CardTitle, Row, Col, Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n import RangeAlert from \"components/Modals/RangeAlert\";\n\n function Settings() {\n     const globalrange = localStorage.getItem('soundRange');\n     const [range, setRange] = useState(globalrange)\n     const [alert, setAlert] = useState(false);\n     const [alertDesciption, setAlertDesciption] = useState('Range should not be zero');\n\n     const submitSoundRange = () => {\n         if (Number(range) !== 0) {\n             localStorage.setItem('soundRange', range);\n             setAlertDesciption('Range successfully updated')\n             setAlert(true)\n         }\n         else {\n             setAlertDesciption('Range should not be zero')\n             setAlert(true);\n         }\n     }\n\n     return (\n         <>\n             <div className=\"content\">\n                 <Row>\n                     <Col md=\"12\">\n                         <h1>Settings</h1>\n                         <RangeAlert\n                             modalTitle={\"Alert\"}\n                             modalDescription={alertDesciption}\n                             alert={alert}\n                             onClickOk={() => setAlert(false)}\n                         />\n                         <Card>\n                             <CardHeader className=\"mb-5\">\n                                 <CardTitle tag=\"h3\">\n                                     Sound Range Settings\n                                 </CardTitle>\n                             </CardHeader>\n                             <CardBody>\n                                 <div className=\"typography-line\">\n                                     <h1>\n                                         <span>Notify me if decibels exceed:</span>\n                                         <FormGroup>\n                                             <Input type=\"number\" value={range} name=\"number\" id=\"number\" placeholder=\"0 DB\" onChange={(e) => setRange(e.target.value)} />\n                                         </FormGroup>\n                                     </h1>\n                                 </div>\n                                 <div className=\"typography-line\">\n                                     <h1>\n                                         <FormGroup>\n                                             <Button onClick={submitSoundRange}>Submit</Button>\n                                         </FormGroup>\n                                     </h1>\n                                 </div>\n                             </CardBody>\n                         </Card>\n                     </Col>\n                 </Row>\n             </div>\n         </>\n     );\n }\n\n export default Settings;","/Users/aditimalu/Documents/GitHub/SoundFatigueVisualisation/frontend/src/components/Modals/RangeAlert.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":13},{"ruleId":"137","severity":1,"message":"141","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":17},{"ruleId":"137","severity":1,"message":"142","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":207,"column":18,"nodeType":"145","endLine":207,"endColumn":48},{"ruleId":"137","severity":1,"message":"146","line":18,"column":3,"nodeType":"139","messageId":"140","endLine":18,"endColumn":14},{"ruleId":"137","severity":1,"message":"147","line":401,"column":7,"nodeType":"139","messageId":"140","endLine":401,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":25,"column":15,"nodeType":"150","endLine":32,"endColumn":6},{"ruleId":"148","severity":1,"message":"151","line":32,"column":8,"nodeType":"152","endLine":32,"endColumn":10,"suggestions":"153"},{"ruleId":"137","severity":1,"message":"154","line":2,"column":16,"nodeType":"139","messageId":"140","endLine":2,"endColumn":25},{"ruleId":"137","severity":1,"message":"155","line":2,"column":26,"nodeType":"139","messageId":"140","endLine":2,"endColumn":35},{"ruleId":"137","severity":1,"message":"156","line":5,"column":9,"nodeType":"139","messageId":"140","endLine":5,"endColumn":17},{"ruleId":"137","severity":1,"message":"157","line":613,"column":16,"nodeType":"139","messageId":"140","endLine":613,"endColumn":23},{"ruleId":"148","severity":1,"message":"158","line":657,"column":7,"nodeType":"152","endLine":657,"endColumn":18,"suggestions":"159"},{"ruleId":"137","severity":1,"message":"160","line":1,"column":22,"nodeType":"139","messageId":"140","endLine":1,"endColumn":30},{"ruleId":"137","severity":1,"message":"161","line":1,"column":31,"nodeType":"139","messageId":"140","endLine":1,"endColumn":40},{"ruleId":"137","severity":1,"message":"162","line":2,"column":9,"nodeType":"139","messageId":"140","endLine":2,"endColumn":15},{"ruleId":"137","severity":1,"message":"154","line":2,"column":16,"nodeType":"139","messageId":"140","endLine":2,"endColumn":25},{"ruleId":"137","severity":1,"message":"155","line":2,"column":26,"nodeType":"139","messageId":"140","endLine":2,"endColumn":35},{"ruleId":"137","severity":1,"message":"163","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":20},{"ruleId":"137","severity":1,"message":"164","line":3,"column":21,"nodeType":"139","messageId":"140","endLine":3,"endColumn":30},{"ruleId":"137","severity":1,"message":"165","line":4,"column":9,"nodeType":"139","messageId":"140","endLine":4,"endColumn":12},{"ruleId":"137","severity":1,"message":"156","line":5,"column":9,"nodeType":"139","messageId":"140","endLine":5,"endColumn":17},{"ruleId":"137","severity":1,"message":"166","line":5,"column":19,"nodeType":"139","messageId":"140","endLine":5,"endColumn":29},{"ruleId":"137","severity":1,"message":"167","line":9,"column":11,"nodeType":"139","messageId":"140","endLine":9,"endColumn":14},{"ruleId":"137","severity":1,"message":"168","line":11,"column":11,"nodeType":"139","messageId":"140","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"169","line":4,"column":68,"nodeType":"139","messageId":"140","endLine":4,"endColumn":72},{"ruleId":"137","severity":1,"message":"170","line":4,"column":85,"nodeType":"139","messageId":"140","endLine":4,"endColumn":90},{"ruleId":"137","severity":1,"message":"171","line":4,"column":99,"nodeType":"139","messageId":"140","endLine":4,"endColumn":107},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Icons' is defined but never used.","Identifier","unusedVar","'TableList' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'CardColumns' is defined but never used.","'straightLine' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'selectAll' is defined but never used.","'Selection' is defined but never used.","'axisLeft' is defined but never used.","'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'x', and 'y'. Either include them or remove the dependency array.",["175"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'select' is defined but never used.","'scaleLinear' is defined but never used.","'scaleBand' is defined but never used.","'max' is defined but never used.","'axisBottom' is defined but never used.","'ref' is assigned a value but never used.","'dimensions' is assigned a value but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'FormText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [url]",{"range":"180","text":"181"},"Update the dependencies array to be: [data, selection, x, y]",{"range":"182","text":"183"},[833,835],"[url]",[11736,11747],"[data, selection, x, y]"]